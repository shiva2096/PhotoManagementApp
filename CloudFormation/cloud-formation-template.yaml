AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: Smart-Photo-Album-Application

Resources:
  IAMRole:
    Type: "AWS::IAM::Role"
    Properties:
      Path: "/"
      RoleName: "api-gateway-s3-new"
      AssumeRolePolicyDocument: "{\"Version\":\"2012-10-17\",\"Statement\":[{\"Sid\":\"\",\"Effect\":\"Allow\",\"Principal\":{\"Service\":\"apigateway.amazonaws.com\"},\"Action\":\"sts:AssumeRole\"}]}"
      MaxSessionDuration: 3600
      ManagedPolicyArns:
        - "arn:aws:iam::aws:policy/service-role/AmazonAPIGatewayPushToCloudWatchLogs"
      Description: ""

  IAMRole2:
    Type: "AWS::IAM::Role"
    Properties:
      Path: "/service-role/"
      RoleName: "LF1_index_img_cf-role-68o2vuxz"
      AssumeRolePolicyDocument: "{\"Version\":\"2012-10-17\",\"Statement\":[{\"Effect\":\"Allow\",\"Principal\":{\"Service\":\"lambda.amazonaws.com\"},\"Action\":\"sts:AssumeRole\"}]}"
      MaxSessionDuration: 3600
      ManagedPolicyArns:
        - "arn:aws:iam::aws:policy/AmazonS3FullAccess"
        - "arn:aws:iam::aws:policy/AmazonRekognitionFullAccess"
        - "arn:aws:iam::aws:policy/AmazonOpenSearchServiceFullAccess"

  IAMRole3:
    Type: "AWS::IAM::Role"
    Properties:
      Path: "/service-role/"
      RoleName: "LF2_seach_photot_cf-role-dptoj5k2"
      AssumeRolePolicyDocument: "{\"Version\":\"2012-10-17\",\"Statement\":[{\"Effect\":\"Allow\",\"Principal\":{\"Service\":\"lambda.amazonaws.com\"},\"Action\":\"sts:AssumeRole\"}]}"
      MaxSessionDuration: 3600
      ManagedPolicyArns:
        - "arn:aws:iam::aws:policy/AmazonS3FullAccess"
        - "arn:aws:iam::aws:policy/AmazonLexFullAccess"
        - "arn:aws:iam::aws:policy/AmazonOpenSearchServiceFullAccess"

  S3BUCKET1:
    Type: 'AWS::S3::Bucket'
    Properties:
        BucketName: smart-photo-app-shiva-frontend
        AccessControl: PublicRead
        WebsiteConfiguration:
          IndexDocument: index.html

  S3BUCKET2:
    Type: 'AWS::S3::Bucket'
    Properties:
        BucketName: smart-photo-app-shiva-photos
        AccessControl: Private
        PublicAccessBlockConfiguration:
          BlockPublicAcls: false
          BlockPublicPolicy: false
          IgnorePublicAcls: false
          RestrictPublicBuckets: false

  APIGATEWAYRESTAPI:
    Type: 'AWS::ApiGateway::RestApi'
    Properties:
      Name: 'AI Photo Search New'
      Description: 'AI Photo Search application, built during the Cloud and Big Data course at NYU.'
      ApiKeySourceType: 'HEADER'
      BinaryMediaTypes:
        - '*/*'
      EndpointConfiguration:
        Types:
          - 'REGIONAL'

  LambdaFunction:
    Type: "AWS::Lambda::Function"
    Properties:
      Description: "LF1"
      FunctionName: "LF1_index_img_cf"
      Handler: "lambda_function.lambda_handler"
      Architectures:
        - "x86_64"
      Code:
        S3Bucket: "photo-finder-app"
        S3Key: "LF1_index_img_cf.zip"
      MemorySize: 128
      Role: !Sub "arn:aws:iam::${AWS::AccountId}:role/service-role/LF1_index_img-role-68o2vuxz"
      Runtime: "python3.8"
      Timeout: 20
      TracingConfig:
        Mode: "PassThrough"

  LambdaFunction2:
    Type: "AWS::Lambda::Function"
    Properties:
      Description: "LF2"
      FunctionName: "LF2_seach_photot_cf"
      Handler: "lambda_function.lambda_handler"
      Architectures:
        - "x86_64"
      Code:
        S3Bucket: "photo-finder-app"
        S3Key: "LF2_seach_photot_cf.zip"
      MemorySize: 128
      Role: !Sub "arn:aws:iam::${AWS::AccountId}:role/service-role/LF2_seach_photot-role-dptoj5k2"
      Runtime: "python3.8"
      Timeout: 20
      TracingConfig:
        Mode: "PassThrough"



  OpenSearchInstance:
    Type: AWS::OpenSearchService::Domain
    Properties:
      DomainName: "photos2"
      EngineVersion: "Elasticsearch_7.10"
      ClusterConfig:
        InstanceType: t2.small.search
        InstanceCount: 1
      EBSOptions:
        EBSEnabled: true
        VolumeType: gp2
        VolumeSize: 10
